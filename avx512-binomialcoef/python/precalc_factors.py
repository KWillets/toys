#!/usr/bin/env python3

import textwrap
from string import Template
from factor import precalculate

CPP="""// generated by $script

#include <cstddef>

namespace avx512binom {
    constexpr size_t primes_count = $primes_count;
    constexpr size_t factored_count = $factored_count;

    const uint64_t primes[primes_count] = {
$primes_list
    };

    const int8_t factors[factored_count][primes_count] = {
$factors_list
    };
}
"""


def main():
    numbers = list(precalculate())
    for number in numbers:
        for power in number.powers:
            assert power < 63, number

    primes = numbers[0].primes
    d = {}

    indent = ' '*8
    
    d['script'] = __file__
    d['primes_count'] = len(primes)
    d['factored_count'] = len(numbers)

    primes_list = ', '.join(map(str, primes.prime.values()))
    primes_list = textwrap.fill(primes_list, width=72 - 8)
    primes_list = textwrap.indent(primes_list, indent)
    d['primes_list'] = primes_list
    factors_list = []
    for index, number in enumerate(numbers):
        val  = number.val()
        row  = ','.join(map(str, number.powers))
        row  = f"{indent}/* {val:3} */ {{{row}}}"
        last = (index == len(numbers) - 1)
        if not last:
            row += ','

        factors_list.append(row)

    factors_list = '\n'.join(factors_list)
    d['factors_list'] = factors_list

    print(Template(CPP).safe_substitute(d))


if __name__ == '__main__':
    main()
